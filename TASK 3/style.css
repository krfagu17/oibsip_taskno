body {
    background-color: #222;
    color: white;
    font-family: Arial, sans-serif;
    justify-content: center;
    align-items: center;
}

.container {
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
    background-color: rgba(240, 248, 255,0.2);
}
h1{
    text-align: center;
}

#todo-list{
    margin-left: -70px;
    margin-top: 20px;
}
.todo-item {
    display: flex;
    align-items: center;
    justify-content: space-around;
    margin-bottom: 10px;
    gap: 40px;
margin-top: 20px;
}

.todo-item input[type="checkbox"] {
    margin-right: 10px;
}

.todo-item.completed {
    text-decoration: line-through;
    opacity: 0.5;
}

.delete-btn {
    --primary: 255, 90, 120;
    --secondary: 150, 50, 60;
    width: 60px;
    height: 50px;
    border: none;
    outline: none;
    cursor: pointer;
    user-select: none;
    touch-action: manipulation;
    outline: 10px solid rgb(var(--primary), .5);
    border-radius: 100%;
    position: relative;
    transition: .3s;
}

.delete-btn .back {
    background: rgb(var(--secondary));
    border-radius: 100%;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
}

.delete-btn .front {
    background: linear-gradient(0deg, rgba(var(--primary), .6) 20%, rgba(var(--primary)) 50%);
    box-shadow: 0 .5em 1em -0.2em rgba(var(--secondary), .5);
    border-radius: 100%;
    position: absolute;
    border: 1px solid rgb(var(--secondary));
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 1.2rem;
    font-weight: 600;
    font-family: inherit;
    transform: translateY(-15%);
    transition: .15s;
    color: rgb(var(--secondary));
}

.delete-btn:active .front {
    transform: translateY(0%);
    box-shadow: 0 0;
}

/* #todo-input{
    width: auto;
    border: none;
    padding:0.5rem;
    background-color: aqua;
} */
#todo-form {
    margin-top: 5em;
    display: flex;
    gap: 50px;
}

form button {
    font-size: 15px;
    font-family: Arial;
    width: 140px;
    height: 50px;
    border-width: 1px;
    color: #fff;
    border-color: #599bb3;
    font-weight: bold;
    border-top-left-radius: 8px;
    border-top-right-radius: 8px;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;
    box-shadow: 0px 10px 14px -7px #276873;
    text-shadow: 0px 1px 0px #3d768a;
    background: linear-gradient(#599bb3, #408c99);
}

.input {
    width: 400px;
    height: 45px;
    border: none;
    outline: none;
    text-align: center;
    padding: 0px 7px;
    border-radius: 6px;
    color: #fff;
    font-size: 15px;
    background-color: transparent;
    box-shadow: 3px 3px 10px rgba(0, 0, 0, 1),
        -1px -1px 6px rgba(255, 255, 255, 0.4);
}

.input:focus {
    border: 2px solid transparent;
    color: #fff;
    box-shadow: 3px 3px 10px rgba(0, 0, 0, 1),
        -1px -1px 6px rgba(255, 255, 255, 0.4),
        inset 3px 3px 10px rgba(0, 0, 0, 1),
        inset -1px -1px 6px rgba(255, 255, 255, 0.4);
}

.input:valid~.label,
.input:focus~.label {
    transition: 0.3s;
    padding-left: 2px;
    transform: translateY(-35px);
}

.container form .input:valid,
.container form .input:focus {
    box-shadow: 3px 3px 10px rgba(0, 0, 0, 1),
        -1px -1px 6px rgba(255, 255, 255, 0.4),
        inset 3px 3px 10px rgba(0, 0, 0, 1),
        inset -1px -1px 6px rgba(255, 255, 255, 0.4);
}

.label {
    font-size: 15px;
    padding-left: 10px;
    position: absolute;
    top: 120px;
    left: 500px;
    transition: 0.3s;
    pointer-events: none;
}


.glitch-wrapper {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    background-color: #222;
 }
 
 .glitch {
    position: relative;
    font-size: 80px;
    font-weight: 700;
    line-height: 1.2;
    color: #fff;
    letter-spacing: 5px;
    z-index: 1;
 }
 
 .glitch:before,
 .glitch:after {
    display: block;
    content: attr(data-glitch);
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0.8;
 }
 
 .glitch:before {
    animation: glitch-color 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
    color: #0ff;
    z-index: -1;
 }
 
 .glitch:after {
    animation: glitch-color 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite;
    color: #ff00ff;
    z-index: -2;
 }
 
 @keyframes glitch-color {
    0% {
       transform: translate(0);
    }
 
    20% {
       transform: translate(-3px, 3px);
    }
 
    40% {
       transform: translate(-3px, -3px);
    }
 
    60% {
       transform: translate(3px, 3px);
    }
 
    80% {
       transform: translate(3px, -3px);
    }
 
    to {
       transform: translate(0);
    }
 }